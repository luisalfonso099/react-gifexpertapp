{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAmB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAClCR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMd,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBY,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,aA0B/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,mCCpCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEyCC,UAAUH,GAFnD,+DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAOD,EAAIC,GACXC,MAAOF,EAAIE,MACXV,IAAG,UAAIQ,EAAIG,cAAR,aAAI,EAAYC,iBAAiBZ,QAVzB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,SCHLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAChBlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAQ,IAH8B,mBACnCC,EADmC,KAC5BC,EAD4B,KAqB1C,OAfAC,qBAAU,WAERxB,EAAQC,GACPwB,MAAM,SAAAC,GAEDH,EAAS,CACHf,KAAKkB,EACLL,SAAQ,SAInB,CAACpB,IAIGqB,EDlB0BK,CAAa1B,GAAhCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAIpB,OACG,qCACC,oBAAIJ,UAAU,yCAAd,SAAwDhB,IAEvDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAIZ,qBAAKA,UAAU,YAAf,SAIUH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEnBdgB,EAAe,WAAM,IAAD,EAGO7C,mBAAS,CAAC,KAHjB,mBAGtB8C,EAHsB,KAGV/C,EAHU,KAO9B,OACC,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEI,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCjB1B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.9d7c500c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n   \r\n    const handInputChange = (e)=>{\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n        if ( inputValue.trim().length > 2){\r\n      setcategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n        };\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype = {\r\n    setcategories: PropTypes.func.isRequired\r\n};","export const getGifs = async(category) => {\r\n\r\n    const url      = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=b3lT70N0ZqThtwyUdZ3at5H5YdTIYkqP`\r\n    const resp     = await fetch( url );  \r\n    const  {data}  = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:    img.id,\r\n            title: img.title,\r\n            url:   img.images?.downsized_medium.url\r\n        };\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUpBig\">\r\n            <img src={url} alt={title} />\r\n            <p> { title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const {data: images, loading} = useFetchGifs(category);\r\n   \r\n    \r\n    // getGifs();\r\n    return (\r\n       <>\r\n        <h3 className=\"animate__animated animate__fadeInUpBig\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">loading</p>}\r\n\r\n    \r\n\r\n        <div className=\"card-grid\">\r\n        \r\n           \r\n              {\r\n                  images.map(img=>(\r\n                  <GifGridItem \r\n                  key={img.id}\r\n                  {...img}\r\n                  />\r\n\r\n                  ))\r\n              }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n      data: [],\r\n      loading:true\r\n  });\r\n\r\n  useEffect(() => {\r\n      \r\n    getGifs(category)\r\n    .then( imgs=>{\r\n            \r\n          setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n    })\r\n      \r\n  }, [category])\r\n\r\n  \r\n\r\n  return state;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';  \r\n\r\n\r\nexport const GifExpertApp = ()=> {\r\n  \r\n   \r\n    const [categories, setcategories] = useState(['']);\r\n    // const handelAdd = ()=>{\r\n    //      setcategories([...categories, 'delfin'])\r\n    // };\r\n   return(\r\n    <>\r\n    <h1>GifExpertApp</h1>\r\n    <AddCategory setcategories={setcategories}/>\r\n    <hr/>\r\n   \r\n        <ol>\r\n            {\r\n                categories.map( category=>\r\n                     <GifGrid\r\n                     key={category}\r\n                     category={category}/>   \r\n                     )\r\n            }\r\n        </ol>\r\n    \r\n    \r\n    \r\n    \r\n    </>\r\n    );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  {GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}